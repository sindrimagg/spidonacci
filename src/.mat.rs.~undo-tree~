(undo-tree-save-format-version . 1)
"1834294612fc3edf4b8ad5be6fdf1e8dfc07290e"
[nil nil nil nil (26434 14044 631410 0) 0 nil]
([nil nil ((#("{" 0 1 (fontified t)) . 17) (#("}" 0 1 (fontified t)) . 25) (45 . 47) (#("Z" 0 1 (face font-lock-type-face fontified t)) . 45) (#("ro" 0 2 (face font-lock-type-face fontified t)) . 47) (51 . 52) (#("On" 0 2 (face font-lock-type-face fontified t)) . 51) (54 . 56) (229 . 234) (263 . 266) (264 . 265) (297 . 299) (358 . 359) (359 . 360) (379 . 380) (380 . 381) (395 . 396) (396 . 397) (399 . 400) (400 . 401) (403 . 404) (404 . 405) (418 . 419) (419 . 420) (#(" " 0 1 (fontified t)) . 686) (756 . 757) (757 . 758) (821 . 822) (822 . 823) (872 . 884) 1 (t 26408 40575 7824 864000)) nil (26440 21571 937891 0) 0 nil])
([nil nil ((1538 . 1539) (t 26434 14044 634535 101000)) nil (26440 22908 500717 0) 0 nil] [nil nil ((#("use num_bigint::BigUint;
use num_traits::{One, Zero};

pub fn fib(n: usize) -> BigUint {
    let f: (&BigUint, &BigUint, &BigUint) = (&Zero::zero(), &One::one(), &One::one());
    let a = pow(f, n);
    return a.1;
}

fn mult(
    a: (&BigUint, &BigUint, &BigUint),
    b: (&BigUint, &BigUint, &BigUint),
) -> (BigUint, BigUint, BigUint) {
    let tmp: BigUint = a.1 * b.1;
    return (a.0 * b.0 + &tmp, a.0 * b.1 + a.1 * b.2, tmp + a.2 * b.2);
}

fn pow(base: (&BigUint, &BigUint, &BigUint), exp: usize) -> (BigUint, BigUint, BigUint) {
    if exp == 0 {
        return (One::one(), Zero::zero(), One::one());
    } else if exp == 1 {
        return (base.0.clone(), base.1.clone(), base.2.clone());
    } else {
        let unit: (BigUint, BigUint, BigUint) = pow(base, exp % 2);
        let acc: (BigUint, BigUint, BigUint) = pow(base, exp / 2);
        let oth: (BigUint, BigUint, BigUint) =
            mult((&acc.0, &acc.1, &acc.2), (&acc.0, &acc.1, &acc.2));

        return mult((&unit.0, &unit.1, &unit.2), (&oth.0, &oth.1, &oth.2));
    }
}

/*
fn pow(base: (&BigUint, &BigUint, &BigUint), exp: usize) -> (BigUint, BigUint, BigUint) {
    let mut ret = (One::one(), Zero::zero(), One::one());
    let mut acc = (base.0.clone(), base.1.clone(), base.2.clone());
    let mut exp = exp;

    while exp > 0 {
        if exp & 1 == 1 {
            ret = mult((&acc.0, &acc.1, &acc.2), (&ret.0, &ret.1, &ret.2));
        }
        acc = mult((&acc.0, &acc.1, &acc.2), (&acc.0, &acc.1, &acc.2));
        exp >>= 1;
    }
    ret
}
*/
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 14 (face font-lock-constant-face fontified t) 14 16 (fontified t) 16 23 (face font-lock-type-face fontified t) 23 25 (fontified t) 25 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 39 (face font-lock-constant-face fontified t) 39 42 (fontified t) 42 44 (face font-lock-type-face fontified t) 44 45 (face font-lock-type-face fontified t) 45 47 (fontified t) 47 48 (face font-lock-type-face fontified t) 48 49 (face font-lock-type-face fontified t) 49 51 (face font-lock-type-face fontified t) 51 55 (fontified t) 55 58 (face font-lock-keyword-face fontified t) 58 59 (fontified t) 59 61 (face font-lock-keyword-face fontified t) 61 62 (fontified t) 62 65 (face font-lock-function-name-face fontified t) 65 66 (fontified t) 66 67 (face font-lock-variable-name-face fontified t) 67 69 (fontified t) 69 74 (face font-lock-type-face fontified t) 74 77 (fontified t) 77 78 (syntax-table (1) fontified t) 78 79 (fontified t) 79 86 (face font-lock-type-face fontified t) 86 93 (fontified t) 93 96 (face font-lock-keyword-face fontified t) 96 97 (fontified t) 97 98 (face font-lock-variable-name-face fontified t) 98 101 (fontified t) 101 102 (face rust-ampersand-face fontified t) 102 109 (face font-lock-type-face fontified t) 109 111 (fontified t) 111 112 (face rust-ampersand-face fontified t) 112 119 (face font-lock-type-face fontified t) 119 121 (fontified t) 121 122 (face rust-ampersand-face fontified t) 122 129 (face font-lock-type-face fontified t) 129 134 (fontified t) 134 135 (face rust-ampersand-face fontified t) 135 139 (face font-lock-type-face fontified t) 139 149 (fontified t) 149 150 (face rust-ampersand-face fontified t) 150 153 (face font-lock-type-face fontified t) 153 162 (fontified t) 162 163 (face rust-ampersand-face fontified t) 163 166 (face font-lock-type-face fontified t) 166 180 (fontified t) 180 183 (face font-lock-keyword-face fontified t) 183 184 (fontified t) 184 185 (face font-lock-variable-name-face fontified t) 185 203 (fontified t) 203 209 (face font-lock-keyword-face fontified t) 209 218 (fontified t) 218 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t) 221 225 (face font-lock-function-name-face fontified t) 225 226 (fontified t) 226 231 (fontified t) 231 232 (face font-lock-variable-name-face fontified t) 232 235 (fontified t) 235 236 (face rust-ampersand-face fontified t) 236 243 (face font-lock-type-face fontified t) 243 245 (fontified t) 245 246 (face rust-ampersand-face fontified t) 246 253 (face font-lock-type-face fontified t) 253 255 (fontified t) 255 256 (face rust-ampersand-face fontified t) 256 263 (face font-lock-type-face fontified t) 263 265 (fontified t) 265 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (face font-lock-variable-name-face fontified t) 271 274 (fontified t) 274 275 (face rust-ampersand-face fontified t) 275 282 (face font-lock-type-face fontified t) 282 284 (fontified t) 284 285 (face rust-ampersand-face fontified t) 285 292 (face font-lock-type-face fontified t) 292 294 (fontified t) 294 295 (face rust-ampersand-face fontified t) 295 302 (face font-lock-type-face fontified t) 302 303 (fontified t) 303 305 (fontified t) 305 308 (fontified t) 308 309 (syntax-table (1) fontified t) 309 311 (fontified t) 311 318 (face font-lock-type-face fontified t) 318 320 (fontified t) 320 327 (face font-lock-type-face fontified t) 327 329 (fontified t) 329 336 (face font-lock-type-face fontified t) 336 344 (fontified t) 344 347 (face font-lock-keyword-face fontified t) 347 348 (fontified t) 348 351 (face font-lock-variable-name-face fontified t) 351 353 (fontified t) 353 360 (face font-lock-type-face fontified t) 360 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t) 368 369 (fontified t) 369 378 (fontified t) 378 384 (face font-lock-keyword-face fontified t) 384 389 (fontified t) 389 390 (fontified t) 390 391 (fontified t) 391 392 (fontified t) 392 398 (fontified t) 398 399 (face rust-ampersand-face fontified t) 399 407 (fontified t) 407 408 (fontified t) 408 409 (fontified t) 409 410 (fontified t) 410 413 (fontified t) 413 414 (fontified t) 414 415 (fontified t) 415 416 (fontified t) 416 419 (fontified t) 419 420 (fontified t) 420 421 (fontified t) 421 422 (fontified t) 422 436 (fontified t) 436 437 (fontified t) 437 438 (fontified t) 438 439 (fontified t) 439 448 (fontified t) 448 450 (face font-lock-keyword-face fontified t) 450 451 (fontified t) 451 454 (face font-lock-function-name-face fontified t) 454 455 (fontified t) 455 459 (face font-lock-variable-name-face fontified t) 459 462 (fontified t) 462 463 (face rust-ampersand-face fontified t) 463 470 (face font-lock-type-face fontified t) 470 472 (fontified t) 472 473 (face rust-ampersand-face fontified t) 473 480 (face font-lock-type-face fontified t) 480 482 (fontified t) 482 483 (face rust-ampersand-face fontified t) 483 490 (face font-lock-type-face fontified t) 490 493 (fontified t) 493 496 (face font-lock-variable-name-face fontified t) 496 498 (fontified t) 498 503 (face font-lock-type-face fontified t) 503 506 (fontified t) 506 507 (syntax-table (1) fontified t) 507 509 (fontified t) 509 516 (face font-lock-type-face fontified t) 516 518 (fontified t) 518 525 (face font-lock-type-face fontified t) 525 527 (fontified t) 527 534 (face font-lock-type-face fontified t) 534 542 (fontified t) 542 544 (face font-lock-keyword-face fontified t) 544 564 (fontified t) 564 570 (face font-lock-keyword-face fontified t) 570 572 (fontified t) 572 575 (face font-lock-type-face fontified t) 575 584 (fontified t) 584 588 (face font-lock-type-face fontified t) 588 598 (fontified t) 598 601 (face font-lock-type-face fontified t) 601 617 (fontified t) 617 621 (face font-lock-keyword-face fontified t) 621 622 (fontified t) 622 624 (face font-lock-keyword-face fontified t) 624 644 (fontified t) 644 650 (face font-lock-keyword-face fontified t) 650 707 (fontified t) 707 711 (face font-lock-keyword-face fontified t) 711 722 (fontified t) 722 725 (face font-lock-keyword-face fontified t) 725 726 (fontified t) 726 730 (face font-lock-variable-name-face fontified t) 730 733 (fontified t) 733 740 (face font-lock-type-face fontified t) 740 742 (fontified t) 742 749 (face font-lock-type-face fontified t) 749 751 (fontified t) 751 758 (face font-lock-type-face fontified t) 758 775 (fontified t) 775 776 (fontified t) 776 777 (fontified t) 777 778 (fontified t) 778 790 (fontified t) 790 793 (face font-lock-keyword-face fontified t) 793 794 (fontified t) 794 797 (face font-lock-variable-name-face fontified t) 797 800 (fontified t) 800 807 (face font-lock-type-face fontified t) 807 809 (fontified t) 809 816 (face font-lock-type-face fontified t) 816 818 (fontified t) 818 825 (face font-lock-type-face fontified t) 825 842 (fontified t) 842 843 (fontified t) 843 844 (fontified t) 844 845 (fontified t) 845 857 (fontified t) 857 860 (face font-lock-keyword-face fontified t) 860 861 (fontified t) 861 864 (face font-lock-variable-name-face fontified t) 864 867 (fontified t) 867 874 (face font-lock-type-face fontified t) 874 876 (fontified t) 876 883 (face font-lock-type-face fontified t) 883 885 (fontified t) 885 892 (face font-lock-type-face fontified t) 892 895 (fontified t) 895 907 (fontified t) 907 914 (fontified t) 914 915 (face rust-ampersand-face fontified t) 915 922 (fontified t) 922 923 (face rust-ampersand-face fontified t) 923 930 (fontified t) 930 931 (face rust-ampersand-face fontified t) 931 940 (fontified t) 940 941 (face rust-ampersand-face fontified t) 941 948 (fontified t) 948 949 (face rust-ampersand-face fontified t) 949 956 (fontified t) 956 957 (face rust-ampersand-face fontified t) 957 975 (fontified t) 975 981 (face font-lock-keyword-face fontified t) 981 988 (fontified t) 988 989 (face rust-ampersand-face fontified t) 989 997 (fontified t) 997 998 (face rust-ampersand-face fontified t) 998 1006 (fontified t) 1006 1007 (face rust-ampersand-face fontified t) 1007 1017 (fontified t) 1017 1018 (face rust-ampersand-face fontified t) 1018 1025 (fontified t) 1025 1026 (face rust-ampersand-face fontified t) 1026 1033 (fontified t) 1033 1034 (face rust-ampersand-face fontified t) 1034 1052 (fontified t) 1052 1054 (face font-lock-comment-delimiter-face fontified t) 1054 1113 (face font-lock-comment-face fontified t) 1113 1114 (face font-lock-comment-face syntax-table (1) fontified t) 1114 1309 (face font-lock-comment-face fontified t) 1309 1310 (face font-lock-comment-face syntax-table (1) fontified t) 1310 1500 (face font-lock-comment-face fontified t) 1500 1511 (face font-lock-comment-face fontified t) 1511 1512 (face font-lock-comment-face syntax-table (1) fontified t) 1512 1513 (face font-lock-comment-face syntax-table (1) fontified t) 1513 1518 (face font-lock-comment-face fontified t) 1518 1534 (face font-lock-comment-face fontified t) 1534 1536 (face font-lock-comment-face fontified t) 1536 1537 (fontified t)) . 1) (undo-tree-id1 . -89) (undo-tree-id2 . -321) (undo-tree-id3 . -321) (undo-tree-id4 . -1537) (undo-tree-id5 . -849) (undo-tree-id6 . -321) (undo-tree-id7 . -321) (undo-tree-id9 . -1537) (undo-tree-id11 . -1537) 1538 (t 26434 14044 634535 101000)) ((1 . 1538)) (26440 21571 692629 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1538) (undo-tree-id34 . -1) 1539) nil (26440 22908 500716 0) 0 nil])
([nil nil ((1 . 3)) ((#("kj" 0 1 (fontified t) 1 2 (fontified t)) . 1) (undo-tree-id30 . -1) (undo-tree-id31 . -2) (undo-tree-id32 . -1) (undo-tree-id33 . -2)) (26440 21571 366716 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-face fontified t)) . 1535) (#("*" 0 1 (face font-lock-comment-face fontified t)) . 1535)) nil (26440 22908 500710 0) 0 nil])
([nil nil ((1 . 3) (#("k" 0 1 (fontified t)) . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("j" 0 1 (fontified t)) . -2) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 3) ((1 . 3) (#("kk" 0 1 (fontified t) 1 2 (fontified t)) . 1) (undo-tree-id25 . -1) (undo-tree-id26 . -2) (undo-tree-id27 . -1) (undo-tree-id28 . -2) (undo-tree-id29 . -2)) (26440 21570 914438 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 1053) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1053)) nil (26440 22908 500710 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("k" 0 1 (fontified t)) . -2) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 3) ((1 . 3)) (26440 21570 913588 0) 0 nil])
([nil nil ((1052 . 1054)) nil (26440 22908 500709 0) 0 nil])
nil
([nil nil ((448 . 449)) nil (26440 22908 500709 0) 0 nil])
([nil current ((449 . 451)) nil (26440 22908 500705 0) 0 nil])
nil
